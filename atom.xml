<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>心不了情</title>
  
  <subtitle>富婆叫我了,告辞...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wangzhicto.com/"/>
  <updated>2019-05-11T09:05:31.847Z</updated>
  <id>http://wangzhicto.com/</id>
  
  <author>
    <name>Wang Zhi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTTP协议</title>
    <link href="http://wangzhicto.com/2019/05/08/HTTP/"/>
    <id>http://wangzhicto.com/2019/05/08/HTTP/</id>
    <published>2019-05-08T15:13:58.607Z</published>
    <updated>2019-05-11T09:05:31.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="走进HTTP协议之报文-上"><a href="#走进HTTP协议之报文-上" class="headerlink" title="走进HTTP协议之报文(上)"></a>走进HTTP协议之报文(上)</h1><hr><p><strong>第一个博客还是从HTTP开始吧，原因很简单，我买了一本剖析HTTP的书，也是我第一次完整地看完第一本关于技术的书籍。我相信对于大多数开发者而言，特别是web开发，我们时时刻刻都接触着HTTP，但是对于初级甚至更高级的程序员，不见得对这个熟悉又陌生的协议多精通，当然我也一样，在不断学习。对于刚入行或者外行朋友来说什么是HTTP，解释起来费劲，就一句话:当你在浏览器地址栏里输入了’<a href="http://www.baidu.com&#39;按下回车那一刻，展现在你面前的这个页面就是通过HTTP协议从服务器带回来的，可以说，大家平时上网浏览/购物等等都是建立在HTTP协议上通信的。就不从头写了，直接上整理的资料" target="_blank" rel="noopener">www.baidu.com&#39;按下回车那一刻，展现在你面前的这个页面就是通过HTTP协议从服务器带回来的，可以说，大家平时上网浏览/购物等等都是建立在HTTP协议上通信的。就不从头写了，直接上整理的资料</a>!</strong></p><h2 id="HTTP报文结构"><a href="#HTTP报文结构" class="headerlink" title="HTTP报文结构"></a>HTTP报文结构</h2><p>客户端与服务器之间的通信通过底层流处理传输数据，但是如果两者之间只是单纯的发送字节数据，彼此根本不知道对方所描述的信息，两种之间必须通过某种数据格式传输数据，好比人们写信一样，要按照某一种格式写，如果只是在纸上不按规矩随便写上自己的内容，接收方是无法理解你写的东西的。而客户端与服务器之间通信约定的格式就是HTTP协议，HTTP他是一种规范，一种约定的协议，并不是某种新的物理技术。<br><a id="more"></a><br>对于新同学来说首先上图：我以火狐浏览器为例，打开浏览器按下F12，就可以看到许多条浏览器请求服务器的记录，随便选中一条就可以看到HTTP部分模样了。</p><p><img src="/2019/05/08/HTTP/images/request.png" alt></p><h3 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h3><p>HTTP请求和响应的报文结构一致</p><p><img src="/images/http.png" alt></p><ul><li>对于请求来说请求行包含请求服务器的方法,资源URL和HTTP版本信息</li><li>对于响应来说响应行包含请求结果的状态码，消息说明和HTTP版本信息</li><li>请求头包含请求或响应的各种条件和属性，一般分未4钟头部：通用头部，请求头部，响应头部，实体头部<ol><li>通用首部字段：请求报文和响应报文都会使用的各种头部。</li><li>请求首部字段：从客户端向服务器发送请求时使用的各种头部。</li><li>响应首部字段：从服务器向客户端发送响应时使用的各种头部。</li><li>实体首部字段：在请求/响应的实体部分使用的各种头部。<h3 id="注意：当HTTP报文首部出现了两个或以上相同头部字段名时到底是处理第一次出现还是最后一次的头部，各浏览器内部处理逻辑不同。"><a href="#注意：当HTTP报文首部出现了两个或以上相同头部字段名时到底是处理第一次出现还是最后一次的头部，各浏览器内部处理逻辑不同。" class="headerlink" title="注意：当HTTP报文首部出现了两个或以上相同头部字段名时到底是处理第一次出现还是最后一次的头部，各浏览器内部处理逻辑不同。"></a>注意：当HTTP报文首部出现了两个或以上相同头部字段名时到底是处理第一次出现还是最后一次的头部，各浏览器内部处理逻辑不同。</h3><h2 id="HTTP首部"><a href="#HTTP首部" class="headerlink" title="HTTP首部"></a>HTTP首部</h2>HTTP首部字段是传递额外重要信息的作用，比如告知对方自己处理的字符集，压缩格式，实体类型等等。<br>我们以HTTP1.1为例(目前使用最为广泛的就是HTTP的1.1版本，各版本之间的区别，在以后会讲到)<h3 id="常见的通用头部字段"><a href="#常见的通用头部字段" class="headerlink" title="常见的通用头部字段"></a>常见的通用头部字段</h3></li></ol></li><li><strong>Connection 连接管理：</strong><br><br>  <code>1.控制代理服务器不再转发该头部 Connection:Upgrade</code><br><br>  <code>2.管理持久连接 Connection:Keep-Alive</code> 表示客户端与服务器的连接是持久连接，这也是HTTP1.0和1.1很大的不同之处。</li><li><strong>Date 创建报文的时间：</strong><br><br>  <code>Date:Tue,01 Jul 1999 09:09:09 GMT 表示通信双方发送报文的时间。</code></li><li><strong>Transfer-Encoding 编码方式：</strong><br><br>  <code>Transfer-Encoding:chunked 表示传输报文主体时采用的编码方式。</code></li><li><strong>Via 路径追踪：(各个代理服务器会在Via信息中添加自己服务器的元信息)</strong><br><br>  <code>Via:1.0 gw.hackr.jp(Squid/3.1),1.1 a1 example.com(Squid/2.7) 表示HTTP报文从客户端到目标服务器经过所有的代理或网关，每经过一个代理服务器，Via的信息就会添加追加一条该服务器的元信息。</code></li><li><strong>Warning 警告：</strong><br><br>  <code>Warning:[警告码][主机:端口]&quot;[警告内容]&quot;([警告时间]) 表示通信之间的各种警告提示信息。</code><h3 id="常见的请求首部字段"><a href="#常见的请求首部字段" class="headerlink" title="常见的请求首部字段"></a>常见的请求首部字段</h3></li><li><strong>Accept 能接受的格式：</strong><br><br>  <code>Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</code> 表示客户端告知服务器自己能处理的媒体信息类型，类型之间逗号隔开，q表示权重，不指定权重，默认q=1。</li><li><strong>Accept-Charset 能接受的字符集：</strong><br><br>  <code>Accept:Charset:iso-8859-1,unicode-1-1;q=0.8 表示客户端告知服务器自己能处理的字符集，q表示字符集间的权重优先级，各种字符集之间逗号隔开。</code></li><li><strong>Accept-Encoding 能接受的内容编码：</strong><br><br>  <code>Accept-Encoding:gzip,deflate 表示客户端告知服务器自己处理文件的编码方式，gzip和deflate均是压缩算法格式，q表示权重优先级。</code></li><li><strong>Accept-Language 能接受的语言：</strong><br><br>  <code>Accept-Language:zh-cn,zh;q=0.7;en-us,en;q==0.3 表示客户端告知服务器自己能处理的语言,中文或英文等等。</code></li><li><strong>Authorization 认证信息：</strong><br><br>  <code>Authorization:Basic wllirSOI64Slsdkhsdf635dg== 表示客户端告知服务器用户代理的认证信息，如果服务器要求该认证信息，而客户端没有传入，则会抛出401错误。</code></li><li><strong>Host 请求的目标服务器主机名：</strong><br><br>  <code>Host:www.wangzhicto.com 指明要请求的目标服务器，当某个IP地址下映射了多个域名，转发服务器无法得知客户端要访问哪一个子服务器时，就必须要明确指定时哪一个子服务器。</code></li><li><strong>Range 请求资源范围：</strong><br><br>  <code>Range:bytes=1024-2048 表示客户端告知服务器自己所需要的资源的范围，比如客户端需要username.txt文件的第1024-2048字节内容，服务器就无需全部返回。注：范围单位是字节。</code></li><li><strong>Referer 请求发起来源地址：</strong><br><br>  <code>Referer:http://www.taobao.com/index.html 表示请求的URL是从哪一个页面发起的。</code></li><li><strong>User-Agent 客户端信息：</strong><br><br>  <code>User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36 客户端告知服务器自己的基本信息，比如操作系统及版本、CPU 类型、浏览器及版本、浏览器渲染引擎、浏览器语言、浏览器插件等。</code><h3 id="常见的响应首部字段"><a href="#常见的响应首部字段" class="headerlink" title="常见的响应首部字段"></a>常见的响应首部字段</h3></li><li><strong>Server 服务器信息：</strong><br><br>  <code>Server:Apache/2.2.0 (Unix) 表示服务器告知客户端当前服务器上的HTTP服务器应用程序基本信息。</code></li><li><strong>Accept-Ranges 范围处理：</strong><br><br>  <code>Accept-Ranges:bytes 告知客户端当前服务器能否处理范围请求，不能处理就返回none</code></li><li><strong>Location 资源重定向：</strong><br><br>  <code>Location:http://www.wangchicto2.com/hello.html 表示服务器告知客户端，被请求的资源在另一个地址，希望客户端按照如下地址进行请求，并且返回的状态码为3开头的三位数，比如302重定向。</code></li><li><strong>Retry-After 服务器维护通知：</strong><br><br>  <code>Retry-After:Tue,01 Jul 1999 09:09:09 GMT 告知客户端服务器维护到某个时刻以后再来访问。</code></li><li><strong>Content-Encoding 内容编码方式：</strong><br><br>  <code>Content-Encoding:gzip</code></li><li><strong>Content-Language 内容语言：</strong><br><br>  <code>Content-Language:zh-CN</code></li><li><strong>Content-Length 内容大小：</strong><br><br>  <code>Content-Length:1024 表示返回的内容大小，单位：字节。</code></li><li><strong>Content-Range 内容范围：</strong><br><br>  <code>Content-Range:1024-2048 表示返回的内容范围。</code></li><li><strong>Content-Type 实体类型：</strong><br><br>  <code>Content-Type:text/html;charset=utf-8 表示返回的内容类型格式。</code><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3></li><li><p><strong>Cookie 客户端信息对象：</strong><br><br>  <code>Cookie:username=wangzhi 表示客户端告知服务器一些私密信息</code></p><h2 id="HTTP常见状态码速查"><a href="#HTTP常见状态码速查" class="headerlink" title="HTTP常见状态码速查"></a>HTTP常见状态码速查</h2><p>HTTP状态码表示服务器返回给客户端的状态，可以大概描述处理的结果情况。HTTP状态码分为5类,分别是1xx,2xx,3xx,4xx,5xx (‘xx’表示数字)<br><br><strong>1xx:1开头的三位数，表示服务器接收后请求正在处理。</strong><br><br><strong>2xx:2开头的三位数，表示服务器正常处理完毕。</strong><br><br><strong>3xx:3开头的三位数，表示该请求需要附加操作才能继续完成。</strong><br><br><strong>4xx:4开头的三位数，表示服务器无法处理该请求。</strong><br><br><strong>5xx:5开头的三位数，表示服务器在处理请求过程中出错。</strong><br></p></li><li><p><strong>200</strong>    表示客户端发起的请求被服务器正常成功处理。</p></li><li><strong>206</strong>    表示客户端发起了范围请求。</li><li><strong>302</strong>    表示该请求的资源被分配到了新的路径上，希望客户端重新按照返回的URL请求。</li><li><strong>304</strong>    表示服务器告知客户端，该资源可以使用你的缓存，不需要重新获取。</li><li><strong>400</strong>    表示请求报文中存在语法格式错误，请客户端检查发请的请求格式是否合法。</li><li><strong>401</strong>    表示服务器需要客户端提供身份认证。</li><li><strong>403</strong>    表示客户端请求的资源不允许访问。</li><li><strong>404</strong>    表示服务器上没有客户端要请求的资源。这个错误很常见，请求的资源不存在。</li><li><strong>500</strong>    表示服务器在处理请求的时候发生了错误，可能是程序BUG引起。</li><li><strong>502</strong>    表示服务器宕机或防火墙问题。</li><li><strong>503</strong>    表示服务器处于超负荷运行或正在停机维护。</li></ul><hr><h1 id="第一章博客就到此吧，后续分享HTTP-下-包括HTTP的请求方式，HTTPS，HTTP请求全过程的解析。"><a href="#第一章博客就到此吧，后续分享HTTP-下-包括HTTP的请求方式，HTTPS，HTTP请求全过程的解析。" class="headerlink" title="#第一章博客就到此吧，后续分享HTTP(下),包括HTTP的请求方式，HTTPS，HTTP请求全过程的解析。"></a>#第一章博客就到此吧，后续分享HTTP(下),包括HTTP的请求方式，HTTPS，HTTP请求全过程的解析。</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;走进HTTP协议之报文-上&quot;&gt;&lt;a href=&quot;#走进HTTP协议之报文-上&quot; class=&quot;headerlink&quot; title=&quot;走进HTTP协议之报文(上)&quot;&gt;&lt;/a&gt;走进HTTP协议之报文(上)&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;第一个博客还是从HTTP开始吧，原因很简单，我买了一本剖析HTTP的书，也是我第一次完整地看完第一本关于技术的书籍。我相信对于大多数开发者而言，特别是web开发，我们时时刻刻都接触着HTTP，但是对于初级甚至更高级的程序员，不见得对这个熟悉又陌生的协议多精通，当然我也一样，在不断学习。对于刚入行或者外行朋友来说什么是HTTP，解释起来费劲，就一句话:当你在浏览器地址栏里输入了’&lt;a href=&quot;http://www.baidu.com&amp;#39;按下回车那一刻，展现在你面前的这个页面就是通过HTTP协议从服务器带回来的，可以说，大家平时上网浏览/购物等等都是建立在HTTP协议上通信的。就不从头写了，直接上整理的资料&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;www.baidu.com&amp;#39;按下回车那一刻，展现在你面前的这个页面就是通过HTTP协议从服务器带回来的，可以说，大家平时上网浏览/购物等等都是建立在HTTP协议上通信的。就不从头写了，直接上整理的资料&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;HTTP报文结构&quot;&gt;&lt;a href=&quot;#HTTP报文结构&quot; class=&quot;headerlink&quot; title=&quot;HTTP报文结构&quot;&gt;&lt;/a&gt;HTTP报文结构&lt;/h2&gt;&lt;p&gt;客户端与服务器之间的通信通过底层流处理传输数据，但是如果两者之间只是单纯的发送字节数据，彼此根本不知道对方所描述的信息，两种之间必须通过某种数据格式传输数据，好比人们写信一样，要按照某一种格式写，如果只是在纸上不按规矩随便写上自己的内容，接收方是无法理解你写的东西的。而客户端与服务器之间通信约定的格式就是HTTP协议，HTTP他是一种规范，一种约定的协议，并不是某种新的物理技术。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="通信" scheme="http://wangzhicto.com/categories/%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="HTTP" scheme="http://wangzhicto.com/tags/HTTP/"/>
    
      <category term="通信" scheme="http://wangzhicto.com/tags/%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>千里之行始于足下</title>
    <link href="http://wangzhicto.com/2019/05/07/hello-world/"/>
    <id>http://wangzhicto.com/2019/05/07/hello-world/</id>
    <published>2019-05-07T09:12:56.559Z</published>
    <updated>2019-05-08T04:36:15.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="千里之行始于足下"><a href="#千里之行始于足下" class="headerlink" title="千里之行始于足下"></a>千里之行始于足下</h1><h4 id="今天开始更新技术博客，同行或者将来同行的朋友们可以一起学习。自己搭的私人站点，慢慢的分享与学习java，数据库，各技术源码，web优化，互联网架构，大数据相关的技术点和一些自己搜集的文档-安装包资源。希望大家指出不足或者错误的地方，也希望给刚入行的朋友一些经验指导！不定时更新。"><a href="#今天开始更新技术博客，同行或者将来同行的朋友们可以一起学习。自己搭的私人站点，慢慢的分享与学习java，数据库，各技术源码，web优化，互联网架构，大数据相关的技术点和一些自己搜集的文档-安装包资源。希望大家指出不足或者错误的地方，也希望给刚入行的朋友一些经验指导！不定时更新。" class="headerlink" title="今天开始更新技术博客，同行或者将来同行的朋友们可以一起学习。自己搭的私人站点，慢慢的分享与学习java，数据库，各技术源码，web优化，互联网架构，大数据相关的技术点和一些自己搜集的文档/安装包资源。希望大家指出不足或者错误的地方，也希望给刚入行的朋友一些经验指导！不定时更新。"></a>今天开始更新技术博客，同行或者将来同行的朋友们可以一起学习。自己搭的私人站点，慢慢的分享与学习java，数据库，各技术源码，web优化，互联网架构，大数据相关的技术点和一些自己搜集的文档/安装包资源。希望大家指出不足或者错误的地方，也希望给刚入行的朋友一些经验指导！不定时更新。</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;千里之行始于足下&quot;&gt;&lt;a href=&quot;#千里之行始于足下&quot; class=&quot;headerlink&quot; title=&quot;千里之行始于足下&quot;&gt;&lt;/a&gt;千里之行始于足下&lt;/h1&gt;&lt;h4 id=&quot;今天开始更新技术博客，同行或者将来同行的朋友们可以一起学习。自己搭的私人站点，慢慢
      
    
    </summary>
    
      <category term="java" scheme="http://wangzhicto.com/categories/java/"/>
    
    
      <category term="java" scheme="http://wangzhicto.com/tags/java/"/>
    
      <category term="数据库" scheme="http://wangzhicto.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="大数据" scheme="http://wangzhicto.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="源码" scheme="http://wangzhicto.com/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
</feed>
